{
	"info": {
		"_postman_id": "a263372e-fa81-4981-80cd-9d18cc5ce716",
		"name": "Test Collection positive and negative scenarios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41336531"
	},
	"item": [
		{
			"name": "Pet.Negativ Scenarios Get,Put,Delete,Post",
			"item": [
				{
					"name": "400 Bad Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 500mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/^",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"^"
							]
						}
					},
					"response": []
				},
				{
					"name": "405 Method Not Allowed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "petstore.swagger.io/v2/pet/",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "404 Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/3999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"3999"
							]
						}
					},
					"response": []
				},
				{
					"name": "400 Bad Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 500mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/[e",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"[e"
							]
						}
					},
					"response": []
				},
				{
					"name": "405 Method Not Allowed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response content type is application/xml\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/xml\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate the structure of the apiResponse object\", function () {\r",
									"    const responseData = xml2Json(pm.response.text());\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.apiResponse).to.exist.and.to.be.an('object');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "404 Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/3ee",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"3ee"
							]
						}
					},
					"response": []
				},
				{
					"name": "415 Unsupported Media Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 415\", function () {\r",
									"    pm.response.to.have.status(415);\r",
									"});\r",
									"pm.test(\"Response time is less than 500mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 33,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Labrador\"\r\n    },\r\n    \"name\": \"Baron\",\r\n    \"photoUrls\": [\r\n        \"http//labradorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"HappyDog\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/4e",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"4e"
							]
						}
					},
					"response": []
				},
				{
					"name": "405 Method Not Allowed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response time is less than 500mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 33,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Labrador\"\r\n    },\r\n    \"name\": \"Baron\",\r\n    \"photoUrls\": [\r\n        \"http//labradorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"HappyDog\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "petstore.swagger.io/v2/pet/",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "400 Bad Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 500mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 00000,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Labrador\"\r\n    },\r\n    \"name\": \"Baron\",\r\n    \"photoUrls\": [\r\n        \"http//labradorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"HappyDog\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "500 Internal Server Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Response time is less than 600ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 7,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Labrador\"\r\n    },\r\n    \"name\": \"Baron\",\r\n    \"photoUrls\": [\r\n        \"http//labradorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 000,\r\n            \"name\": \"HappyDog\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "415 Unsupported Media Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 415\", function () {\r",
									"    pm.response.to.have.status(415);\r",
									"});\r",
									"pm.test(\"Response time is less than 500mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "405 Method Not Allowed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405\", function () {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"pm.test(\"Response time is less than 600mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 33,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Labrador\"\r\n    },\r\n    \"name\": \"Baron\",\r\n    \"photoUrls\": [\r\n        \"http//labradorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"HappyDog\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/r4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"r4"
							]
						}
					},
					"response": []
				},
				{
					"name": "400 Bad Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 600mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": a,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Labrador\"\r\n    },\r\n    \"name\": \"Baron\",\r\n    \"photoUrls\": [\r\n        \"http//labradorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"HappyDog\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "500 Internal Server Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Response time is less than 600mms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 33,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Labrador\"\r\n    },\r\n    \"name\": \"Baron\",\r\n    \"photoUrls\": [\r\n        \"http//labradorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 3ij,\r\n            \"name\": \"HappyDog\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pet.Positive Scenarios Get,Put,Delete,Post",
			"item": [
				{
					"name": "Positive01",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/507",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"507"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive02",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 507,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Crocs\"\r\n    },\r\n    \"name\": \"Kroko\",\r\n    \"photoUrls\": [\r\n        \"http//krokoorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"Hunger\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Positive02Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/507",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"507"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updated Positive02Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 507,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Crocs\"\r\n    },\r\n    \"name\": \"Kroko\",\r\n    \"photoUrls\": [\r\n        \"http//krokoorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"Hunger and always hunger\"\r\n        }\r\n    ],\r\n    \"status\": \"sold\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive.Example.For.Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify tag Name \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.tags[0].name).to.eql(\"MUUUUU\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 509,\r\n    \"category\": {\r\n        \"id\": 7,\r\n        \"name\": \"Cow\"\r\n    },\r\n    \"name\": \"Milka\",\r\n    \"photoUrls\": [\r\n        \"http//krokoorpictures.com/smile.jpg\"\r\n    ],\r\n    \"tags\": [\r\n        {\r\n            \"id\": 15,\r\n            \"name\": \"MUUUUU\"\r\n        }\r\n    ],\r\n    \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Positive.Example.Is.Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Verify type \" , function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify message \", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"509\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "special-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/509",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"509"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify.Positive.Example.Is.Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/509",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"509"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}